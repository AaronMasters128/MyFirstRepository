<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="4615c9d4-9d19-4471-95e1-4b6587fed1d7" name="Aaron.Masters@KEE-L0883 2020-10-13 11:37:32" runUser="ALLOCATESOFTWAR\Aaron.Masters" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="d25ea923-8997-4917-a9d7-bde8e30117ca">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="Aaron.Masters_KEE-L0883 2020-10-13 11_37_32">
      <DeploymentItem filename="C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\PublicAssemblies\WebTest.WebService.Plugin.Runtime.dll" />
    </Deployment>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2020-10-13T11:37:32.2924545+01:00" queuing="2020-10-13T11:37:32.8304853+01:00" start="2020-10-13T11:37:32.8984892+01:00" finish="2020-10-13T11:37:56.0678144+01:00" />
  <ResultSummary outcome="Error">
    <Counters total="1" executed="1" error="1" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="MyStore" storage="c:\users\aaron.masters\aarons-workspaces\vswebtest-workspace\mystore-webtests\webandloadtestproject1\mystore.webtest" id="e19e33f4-96e7-4a72-bf69-2a142bd64b4d" persistedWebTest="">
      <Execution id="0aec2f83-44f3-4673-bd00-8caeb705f599" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="e19e33f4-96e7-4a72-bf69-2a142bd64b4d" executionId="0aec2f83-44f3-4673-bd00-8caeb705f599" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="0aec2f83-44f3-4673-bd00-8caeb705f599" testId="e19e33f4-96e7-4a72-bf69-2a142bd64b4d" testName="MyStore" computerName="KEE-L0883" duration="00:00:12.0389949" startTime="2020-10-13T11:37:33.0484978+01:00" endTime="2020-10-13T11:37:56.0028107+01:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0aec2f83-44f3-4673-bd00-8caeb705f599" dataRowCount="1">
      <Output>
        <ErrorInfo>
          <Message>Exception in PreWebTest event: Could not load file or assembly 'WebTest.WebService.Plugin.Runtime, Version=1.0.0.0, Culture=neutral, PublicKeyToken=7df62e912b712c48' or one of its dependencies. The system cannot find the file specified.</Message>
          <StackTrace>   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMarkHandle stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName, ObjectHandleOnStack type)
   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName)
   at System.Type.GetType(String typeName, Boolean throwOnError)
   at Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.get_Type()
   at Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.CreateInstance()
   at Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.OnPreWebTest(PreWebTestEventArgs e)
   at Microsoft.VisualStudio.TestTools.WebStress.WebTestCaseVariation.Start()</StackTrace>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="MyStore.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="d25ea923-8997-4917-a9d7-bde8e30117ca">
        <Description>These are default test settings for a local test run.</Description>
        <Deployment runDeploymentRoot="Aaron.Masters_KEE-L0883 2020-10-13 11_37_32">
          <DeploymentItem filename="C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\PublicAssemblies\WebTest.WebService.Plugin.Runtime.dll" />
        </Deployment>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Aaron.Masters_KEE-L0883 2020-10-13 11_37_32\In\0aec2f83-44f3-4673-bd00-8caeb705f599\MyStore.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>